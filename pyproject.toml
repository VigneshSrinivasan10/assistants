[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "assistants"
version = "0.1.0"
description = "A low-latency voice assistant that listens for commands and responds"
requires-python = ">=3.10"
authors = [
    { name = "Vignesh Srinivasan", email = "vignesh.mssrinivasan@example.com" }
]
dependencies = [
    "fastapi",
    "fastrtc_whisper_cpp",
    "gradio",
    "hydra-core",
    "numpy==2.2.0",
    "omegaconf",
    "uvicorn",
    "fastrtc>=0.0.26",
    "fastrtc[vad]",
    "fastrtc[stopword]",
    "llama-cpp-python",
    "torch==2.7.1+cpu",
    "soxr",
    "kokoro_onnx",
    "poethepoet>=0.35.0",
    "requests",
    "pytest",
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu" },
]
assistants = { workspace = true }

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.setuptools.packages.find]
where = ["."]
include = ["voice_assistant"]

[project.scripts]
assistant = "voice_assistant.main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.poe.tasks]
install = """
bash -c '
# Check if uv is available
if ! command -v uv &> /dev/null; then
    echo "📦 uv not found. Installing..."
    if pipx install uv; then
        echo "✅ uv installed successfully"
    else
        echo "❌ Error installing uv"
        exit 1
    fi
else
    echo "✅ uv already installed"
fi

echo "🔧 Syncing dependencies..."
uv sync
'
"""

download-llm = """
bash -c '
mkdir -p voice_assistant/models
cd voice_assistant/models 
wget -nc https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.1-GGUF/resolve/main/mistral-7b-instruct-v0.1.Q4_K_M.gguf
cd ../..
'
"""

run = { shell = "bash -c 'source .venv/bin/activate && assistant'" }

start = [
  "install",
  "download-llm",
  "run"
]

smart-run = """
python -c '
import os
if not os.path.exists(".venv") or not os.path.exists("voice_assistant/models/mistral-7b-instruct-v0.1.Q4_K_M.gguf"):
    print("🔧 First-time setup...")
    os.system("poe start")
else:
    print("🚀 Launching assistant...")
    os.system("poe run")
'
"""

#test = "pytest tests/ -v"

test-weather = "python tests/weather.py"

test-llm = "python tests/test_llm.py"

test-llm-interactive = "python tests/interactive_llm_test.py"

test-all = [
  #"test",
  "test-weather",
  "test-llm"
]

[dependency-groups]
dev = [
    "assistants",
]

[project.optional-dependencies]
dev = [
    "assistants",
]
